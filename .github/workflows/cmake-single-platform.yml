# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  Windows_Build:

    runs-on: windows-latest

    env:

      COMPILER: msvc

      QT_VER_MAIN: 6

      QT_VER: 6.6.1

      QT_VER_MSVC: msvc2019

      QT_DATE: 202311210527

      QTDIR: C:\Qt\${{ env.QT_VER }}\${{ env.QT_VER_MSVC }}_64

      VULKAN_VER: 1.3.268.0

      VULKAN_SDK_SHA: 8459ef49bd06b697115ddd3d97c9aec729e849cd775f5be70897718a9b3b9db5

      VULKAN_SDK: C:\VulkanSDK\${{ env.VULKAN_VER }}

      CACHE_DIR: ./cache

      UPLOAD_COMMIT_HASH: 7d09e3be30805911226241afbb14f8cdc2eb054e

      UPLOAD_REPO_FULL_NAME: RPCS3/rpcs3-binaries-win

    steps:

    - uses: actions/checkout@v2

    - uses: microsoft/setup-msbuild@v1.0.2

    - name: Get Cache Keys

      run: .ci/get_keys-windows.sh

      shell: bash

    - name: Cache

      uses: actions/cache@v3

      with:

        key: ${{ runner.os }} | ${{ env.COMPILER }} | "${{ env.QT_VER }}" | ${{ env.VULKAN_SDK_SHA }} | llvm.lock | glslang.lock

        restore-keys: 

          ${{ runner.os }} | ${{ env.COMPILER }}

        path: ${{ env.CACHE_DIR }}

    - name: Download and unpack dependencies

      run: .ci/setup-windows.sh

      shell: bash

    - name: Export Variables

      run: .ci/export-azure-vars.sh

      shell: bash

    - name: Compile RPCS3

      run: msbuild 'rpcs3.sln' /p:configuration='Release' /p:platform='x64'

    - name: Pack up build artifacts

      run: .ci/deploy-windows.sh

      shell: bash

    - uses: actions/upload-artifact@v2

      with:

        path: ${{ github.workspace }}

        name: RPCS3 for Windows

      if: success()

    - name: Push build to GitHub

      run: .ci/github-upload.sh

      shell: bash

      env:

        RPCS3_TOKEN: ${{ env.RPCS3-Token }}

      if: ((variables['Build.Reason'] != 'PullRequest') && (github.repository == 'RPCS3/rpcs3') && (github.ref == 'refs/heads/master'))
